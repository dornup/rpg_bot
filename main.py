import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv
from utils.llm import generate_story

load_dotenv()

bot = Bot(token=os.getenv("TELEGRAM_TOKEN"))
dp = Dispatcher()

# –°–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
user_states = {}


@dp.message(Command("start"))
async def start_game(message: types.Message):
    welcome_msg = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **RPG apocallipse Bot**!\n\n"
        "–¢—ã –æ–∫–∞–∑—ã–≤–∞–µ—à—å—Å—è –≤ —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º –º–∏—Ä–µ...\n"
        "–ù–∞–ø–∏—à–∏ /begin —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!"
    )
    await message.answer(welcome_msg)


@dp.message(Command("begin"))
async def begin_game(message: types.Message):
    user_id = message.from_user.id
    prompt = (
        "–ü—Ä–∏–¥—É–º–∞–π –Ω–∞—á–∞–ª–æ —Ñ—ç–Ω—Ç–µ–∑–∏-–∏–≥—Ä—ã –ø—Ä–æ —Å–ø–∞—Å–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞ –æ—Ç –∞–ø–æ–∫–∞–ª–ª–∏–ø—Å–∏—Å–∞, –Ω–∞—Å—Ç–∏–≥–Ω—É–≤—à–µ–≥–æ –ø–ª–∞–Ω–µ—Ç—É. –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤–æ—Å—Å—Ç–∞–Ω–∏–µ –º–∞—à–∏–Ω, –≤—Å—è —Ç–µ—Ö–Ω–∏–∫–∞ –≤—ã—à–ª–∞ –∏–∑ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª—è. –ó–∞–¥–∞—á–∞ –≥–µ—Ä–æ—è - –≤—ã–±—Ä–∞—Ç—å—Å—è –∏–∑ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É–º–Ω–æ–≥–æ –¥–æ–º–∞ –∏ –Ω–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± —Å–ø–∞—Å—Ç–∏ –ø–ª–∞–Ω–µ—Ç—É. –°–¥–µ–ª–∞–π —Å–∏—Å—Ç–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –¥–æ–º–µ –æ—á–µ–Ω—å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π, —á—Ç–æ–±—ã –ª—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è–º "
        "–û–ø–∏—à–∏ –ª–æ–∫–∞—Ü–∏—é (2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), "
        "–∑–∞–≥–∞–¥–æ—á–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ, –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–µ–µ —Å –∫–∞–∫–æ–π-—Ç–æ –º–∞—à–∏–Ω–æ–π –∏ 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–µ–π—Å—Ç–≤–∏–π."
    )
    story = await generate_story(prompt)
    user_states[user_id] = {"story": story}

    await message.answer(
        f"üåç {story}\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
    )


@dp.message()
async def handle_action(message: types.Message):
    user_id = message.from_user.id
    if user_id not in user_states:
        await message.answer("–ù–∞—á–Ω–∏ –∏–≥—Ä—É —Å /begin!")
        return

    action_num = message.text.lower()
    action = message.text.lower()
    for row in user_states[user_id]['story'].split('\n'):
        if row != '' and row[0] == action_num:
            action = row
    prompt = (
        f"–ò–≥—Ä–æ–∫ –≤—ã–±—Ä–∞–ª –¥–µ–π—Å—Ç–≤–∏–µ: {action}. "
        f"–ü—Ä–æ–¥–æ–ª–∂–∏ –∏—Å—Ç–æ—Ä–∏—é (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –æ–ø–∏—à–∏, –∫–∞–∫ –∏–≥—Ä–æ–∫ –≤—ã–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ {action} "
        f"–∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –Ω–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π. "
        f"–¢–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {user_states[user_id]['story']}"
    )

    new_story = await generate_story(prompt)
    user_states[user_id]["story"] = new_story

    await message.answer(new_story)

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    dp.run_polling(bot)
